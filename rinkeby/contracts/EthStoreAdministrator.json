{
  "contractName": "EthStoreAdministrator",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "storeIdToProductIds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getIdentity",
      "outputs": [
        {
          "name": "isAdministrator",
          "type": "bool"
        },
        {
          "name": "isStoreOwner",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_productId",
          "type": "uint256"
        }
      ],
      "name": "purchaseProduct",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createSampleStore2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "products",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "storeId",
          "type": "uint256"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "count",
          "type": "uint256"
        },
        {
          "name": "enabled",
          "type": "bool"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "imageUrl",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transactions",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "storeId",
          "type": "uint256"
        },
        {
          "name": "productId",
          "type": "uint256"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "buyer",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "storeCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "storeOwnerToStoreId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transactionCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createSampleStore1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "productCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stores",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "storeOwner",
          "type": "address"
        },
        {
          "name": "enabled",
          "type": "bool"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "imageUrl",
          "type": "string"
        },
        {
          "name": "productCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "storeOwner",
          "type": "address"
        }
      ],
      "name": "NewStore",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "storeId",
          "type": "uint256"
        }
      ],
      "name": "NewProduct",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "productId",
          "type": "uint256"
        }
      ],
      "name": "NewTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_storeOwner",
          "type": "address"
        }
      ],
      "name": "createStore",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_storeId",
          "type": "uint256"
        },
        {
          "name": "_enabled",
          "type": "bool"
        }
      ],
      "name": "enableStore",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_productId",
          "type": "uint256"
        },
        {
          "name": "_enabled",
          "type": "bool"
        }
      ],
      "name": "enableProduct",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008060146101000a81548160ff021916908315150217905550600060075560006008556000600955336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139848061007c6000396000f300608060405260043610610133576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063088e0e7114610138578063155dedf914610183578063237c980a146101bc57806336afc6fa1461021357806338e76a031461024d5780633f4ba83a1461026d5780635182d9f6146102845780635c975abb1461029b5780635fd8c710146102ca57806369aac3d2146102e1578063715018a61461031a5780637acc0b20146103315780638456cb59146104d65780638da5cb5b146104ed5780639ace38c214610544578063a1b141d4146105cd578063b17489f5146105f8578063b77bf6001461064f578063df345eec1461067a578063e0f6ef8714610691578063e8a59cd8146106bc578063f2fde38b14610886578063f6b08cc5146108c9575b600080fd5b34801561014457600080fd5b5061016d600480360381019080803590602001909291908035906020019092919050505061090c565b6040518082815260200191505060405180910390f35b34801561018f57600080fd5b506101ba6004803603810190808035906020019092919080351515906020019092919050505061093c565b005b3480156101c857600080fd5b506101fd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a09565b6040518082815260200191505060405180910390f35b34801561021f57600080fd5b50610228610a21565b6040518083151515158152602001821515151581526020019250505060405180910390f35b61026b60048036038101908080359060200190929190505050610b1c565b005b34801561027957600080fd5b50610282610f36565b005b34801561029057600080fd5b50610299610ff4565b005b3480156102a757600080fd5b506102b0611832565b604051808215151515815260200191505060405180910390f35b3480156102d657600080fd5b506102df611845565b005b3480156102ed57600080fd5b5061031860048036038101908080359060200190929190803515159060200190929190505050611985565b005b34801561032657600080fd5b5061032f611a52565b005b34801561033d57600080fd5b5061035c60048036038101908080359060200190929190505050611b54565b6040518089815260200188815260200187815260200186815260200185151515158152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b838110156103c65780820151818401526020810190506103ab565b50505050905090810190601f1680156103f35780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561042c578082015181840152602081019050610411565b50505050905090810190601f1680156104595780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015610492578082015181840152602081019050610477565b50505050905090810190601f1680156104bf5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b3480156104e257600080fd5b506104eb611d80565b005b3480156104f957600080fd5b50610502611e40565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561055057600080fd5b5061056f60048036038101908080359060200190929190505050611e65565b604051808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390f35b3480156105d957600080fd5b506105e2611eca565b6040518082815260200191505060405180910390f35b34801561060457600080fd5b50610639600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ed0565b6040518082815260200191505060405180910390f35b34801561065b57600080fd5b50610664611ee8565b6040518082815260200191505060405180910390f35b34801561068657600080fd5b5061068f611eee565b005b34801561069d57600080fd5b506106a6612ea7565b6040518082815260200191505060405180910390f35b3480156106c857600080fd5b506106e760048036038101908080359060200190929190505050612ead565b604051808881526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186151515158152602001806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b8381101561077757808201518184015260208101905061075c565b50505050905090810190601f1680156107a45780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b838110156107dd5780820151818401526020810190506107c2565b50505050905090810190601f16801561080a5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b83811015610843578082015181840152602081019050610828565b50505050905090810190601f1680156108705780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561089257600080fd5b506108c7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506130f3565b005b3480156108d557600080fd5b5061090a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061315a565b005b60036020528160005260406000208181548110151561092757fe5b90600052602060002001600091509150505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561099957600080fd5b6000831180156109ab57506008548311155b15156109b657600080fd5b60056109cc60018561345590919063ffffffff16565b8154811015156109d857fe5b90600052602060002090600802019050818160040160006101000a81548160ff021916908315150217905550505050565b60016020528060005260406000206000915090505481565b6000806000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614600082118015610aca57506007548211155b8015610b1357506004610ae760018461345590919063ffffffff16565b815481101515610af357fe5b906000526020600020906006020160010160149054906101000a900460ff165b92509250509091565b60008060008060149054906101000a900460ff16151515610b3c57600080fd5b600084118015610b4e57506008548411155b1515610b5957600080fd5b600a60009054906101000a900460ff16151515610b7557600080fd5b6001600a60006101000a81548160ff0219169083151502179055506005610ba660018661345590919063ffffffff16565b815481101515610bb257fe5b906000526020600020906008020192508260040160009054906101000a900460ff168015610be4575082600201543410155b8015610bf4575060008360030154115b1515610bff57600080fd5b610c176001846003015461345590919063ffffffff16565b83600301819055506004610c396001856001015461345590919063ffffffff16565b815481101515610c4557fe5b90600052602060002090600602019150610ccf8360020154600160008560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461346e90919063ffffffff16565b600160008460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d4c600160095461346e90919063ffffffff16565b9050600660a0604051908101604052808381526020018460000154815260200185600001548152602001856002015481526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505090600182039060005260206000209060050201600090919290919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506009819055507fb1445bddd65a1181889e05face87a43c0fe440b363a232b44831c175c7309f58338460000154604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a18260020154341115610f15573373ffffffffffffffffffffffffffffffffffffffff166108fc610ee885600201543461345590919063ffffffff16565b9081150290604051600060405180830381858888f19350505050158015610f13573d6000803e3d6000fd5b505b6000600a60006101000a81548160ff02191690831515021790555050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f9157600080fd5b600060149054906101000a900460ff161515610fac57600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561105457600080fd5b6000925061106e600160075461346e90919063ffffffff16565b9150600460e0604051908101604052808481526020018573ffffffffffffffffffffffffffffffffffffffff1681526020016001151581526020016040805190810160405280601281526020017f4576656e74205469636b65742053746f7265000000000000000000000000000081525081526020016040805190810160405280601681526020017f57652073656c6c206576656e74207469636b65747321000000000000000000008152508152602001606060405190810160405280603f81526020017f68747470733a2f2f73332d61702d736f757468656173742d312e616d617a6f6e81526020017f6177732e636f6d2f62696e617469722e6465762f73746f72652d312e6a70670081525081526020016000815250908060018154018082558091505090600182039060005260206000209060060201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908315150217905550606082015181600201908051906020019061123e929190613584565b50608082015181600301908051906020019061125b929190613584565b5060a0820151816004019080519060200190611278929190613584565b5060c08201518160050155505060078190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060046112e560018461345590919063ffffffff16565b8154811015156112f157fe5b90600052602060002090600602019050600360008260000154815260200190815260200160002061132e600160085461346e90919063ffffffff16565b908060018154018082558091505090600182039060005260206000200160009091929091909150555060056101006040519081016040528061137c600160085461346e90919063ffffffff16565b815260200183600001548152602001678ac7230489e800008152602001600081526020016001151581526020016040805190810160405280601a81526020017f4544434f4e2050617269732031372d313820466562203230313700000000000081525081526020016040805190810160405280600e81526020017f457468657265756d206576656e740000000000000000000000000000000000008152508152602001608060405190810160405280604381526020017f68747470733a2f2f73332d61702d736f757468656173742d312e616d617a6f6e81526020017f6177732e636f6d2f62696e617469722e6465762f6576656e742d6564636f6e2e81526020017f706e670000000000000000000000000000000000000000000000000000000000815250815250908060018154018082558091505090600182039060005260206000209060080201600090919290919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a0820151816005019080519060200190611534929190613584565b5060c0820151816006019080519060200190611551929190613584565b5060e082015181600701908051906020019061156e929190613584565b50505060088190555061158f6001826005015461346e90919063ffffffff16565b816005018190555060036000826000015481526020019081526020016000206115c4600160085461346e90919063ffffffff16565b9080600181540180825580915050906001820390600052602060002001600090919290919091505550600561010060405190810160405280611612600160085461346e90919063ffffffff16565b815260200183600001548152602001674563918244f400008152602001600581526020016001151581526020016040805190810160405280601a81526020017f455448495320486f6e67204b6f6e67203820536570203230313800000000000081525081526020016040805190810160405280600e81526020017f457468657265756d206576656e740000000000000000000000000000000000008152508152602001608060405190810160405280604381526020017f68747470733a2f2f73332d61702d736f757468656173742d312e616d617a6f6e81526020017f6177732e636f6d2f62696e617469722e6465762f6576656e742d65746869732e81526020017f706e670000000000000000000000000000000000000000000000000000000000815250815250908060018154018082558091505090600182039060005260206000209060080201600090919290919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160050190805190602001906117ca929190613584565b5060c08201518160060190805190602001906117e7929190613584565b5060e0820151816007019080519060200190611804929190613584565b5050506008819055506118256001826005015461346e90919063ffffffff16565b8160050181905550505050565b600060149054906101000a900460ff1681565b60008060149054906101000a900460ff1615151561186257600080fd5b600a60009054906101000a900460ff1615151561187e57600080fd5b6001600a60006101000a81548160ff021916908315150217905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611966573d6000803e3d6000fd5b506000600a60006101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119e257600080fd5b6000831180156119f457506007548311155b15156119ff57600080fd5b6004611a1560018561345590919063ffffffff16565b815481101515611a2157fe5b90600052602060002090600602019050818160010160146101000a81548160ff021916908315150217905550505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611aad57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600581815481101515611b6357fe5b90600052602060002090600802016000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff1690806005018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c3a5780601f10611c0f57610100808354040283529160200191611c3a565b820191906000526020600020905b815481529060010190602001808311611c1d57829003601f168201915b505050505090806006018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cd85780601f10611cad57610100808354040283529160200191611cd8565b820191906000526020600020905b815481529060010190602001808311611cbb57829003601f168201915b505050505090806007018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d765780601f10611d4b57610100808354040283529160200191611d76565b820191906000526020600020905b815481529060010190602001808311611d5957829003601f168201915b5050505050905088565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ddb57600080fd5b600060149054906101000a900460ff16151515611df757600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600681815481101515611e7457fe5b90600052602060002090600502016000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b60075481565b60026020528060005260406000206000915090505481565b60095481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f4e57600080fd5b339250611f67600160075461346e90919063ffffffff16565b9150600460e0604051908101604052808481526020018573ffffffffffffffffffffffffffffffffffffffff1681526020016001151581526020016040805190810160405280601181526020017f436f6c642057616c6c65742053746f726500000000000000000000000000000081525081526020016040805190810160405280601581526020017f57652073656c6c20636f6c642077616c6c6574732100000000000000000000008152508152602001606060405190810160405280603f81526020017f68747470733a2f2f73332d61702d736f757468656173742d312e616d617a6f6e81526020017f6177732e636f6d2f62696e617469722e6465762f73746f72652d302e706e670081525081526020016000815250908060018154018082558091505090600182039060005260206000209060060201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055506060820151816002019080519060200190612137929190613584565b506080820151816003019080519060200190612154929190613584565b5060a0820151816004019080519060200190612171929190613584565b5060c08201518160050155505060078190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060046121de60018461345590919063ffffffff16565b8154811015156121ea57fe5b906000526020600020906006020190506003600082600001548152602001908152602001600020612227600160085461346e90919063ffffffff16565b9080600181540180825580915050906001820390600052602060002001600090919290919091505550600561010060405190810160405280612275600160085461346e90919063ffffffff16565b815260200183600001548152602001671bc16d674ec800008152602001606481526020016001151581526020016040805190810160405280600d81526020017f4c6564676572204e616e6f205300000000000000000000000000000000000000815250815260200160e06040519081016040528060a981526020016138b060a991398152602001608060405190810160405280604a81526020017f68747470733a2f2f73332d61702d736f757468656173742d312e616d617a6f6e81526020017f6177732e636f6d2f62696e617469722e6465762f77616c6c65742d6c6564676581526020017f722d6e616e6f2e706e6700000000000000000000000000000000000000000000815250815250908060018154018082558091505090600182039060005260206000209060080201600090919290919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a0820151816005019080519060200190612411929190613584565b5060c082015181600601908051906020019061242e929190613584565b5060e082015181600701908051906020019061244b929190613584565b50505060088190555061246c6001826005015461346e90919063ffffffff16565b816005018190555060036000826000015481526020019081526020016000206124a1600160085461346e90919063ffffffff16565b90806001815401808255809150509060018203906000526020600020016000909192909190915055506005610100604051908101604052806124ef600160085461346e90919063ffffffff16565b815260200183600001548152602001674563918244f400008152602001600081526020016001151581526020016040805190810160405280600b81526020017f4c656467657220426c756500000000000000000000000000000000000000000081525081526020016101206040519081016040528060e2815260200161370760e291398152602001608060405190810160405280604a81526020017f68747470733a2f2f73332d61702d736f757468656173742d312e616d617a6f6e81526020017f6177732e636f6d2f62696e617469722e6465762f77616c6c65742d6c6564676581526020017f722d626c75652e706e6700000000000000000000000000000000000000000000815250815250908060018154018082558091505090600182039060005260206000209060080201600090919290919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a082015181600501908051906020019061268c929190613584565b5060c08201518160060190805190602001906126a9929190613584565b5060e08201518160070190805190602001906126c6929190613584565b5050506008819055506126e76001826005015461346e90919063ffffffff16565b8160050181905550600360008260000154815260200190815260200160002061271c600160085461346e90919063ffffffff16565b908060018154018082558091505090600182039060005260206000200160009091929091909150555060056101006040519081016040528061276a600160085461346e90919063ffffffff16565b815260200183600001548152602001670de0b6b3a76400008152602001601481526020016001151581526020016040805190810160405280601081526020017f5472657a6f72204f6e65205768697465000000000000000000000000000000008152508152602001606060405190810160405280603f81526020017f546865206d6f737420747275737465642068617264776172652077616c6c657481526020017f20696e2074686520776f726c642e2047657420796f75727320746f64617921008152508152602001608060405190810160405280604981526020017f68747470733a2f2f73332d61702d736f757468656173742d312e616d617a6f6e81526020017f6177732e636f6d2f62696e617469722e6465762f77616c6c65742d7472657a6f81526020017f722d6f6e652e6a70670000000000000000000000000000000000000000000000815250815250908060018154018082558091505090600182039060005260206000209060080201600090919290919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a0820151816005019080519060200190612949929190613584565b5060c0820151816006019080519060200190612966929190613584565b5060e0820151816007019080519060200190612983929190613584565b5050506008819055506129a46001826005015461346e90919063ffffffff16565b816005018190555060036000826000015481526020019081526020016000206129d9600160085461346e90919063ffffffff16565b9080600181540180825580915050906001820390600052602060002001600090919290919091505550600561010060405190810160405280612a27600160085461346e90919063ffffffff16565b8152602001836000015481526020016729a2241af62c00008152602001600a81526020016001151581526020016040805190810160405280600e81526020017f5472657a6f72204d6f64656c205400000000000000000000000000000000000081525081526020016101006040519081016040528060dd815260200161362a60dd91398152602001608060405190810160405280604d81526020017f68747470733a2f2f73332d61702d736f757468656173742d312e616d617a6f6e81526020017f6177732e636f6d2f62696e617469722e6465762f77616c6c65742d7472657a6f81526020017f722d6d6f64656c2d742e6a706700000000000000000000000000000000000000815250815250908060018154018082558091505090600182039060005260206000209060080201600090919290919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a0820151816005019080519060200190612bc4929190613584565b5060c0820151816006019080519060200190612be1929190613584565b5060e0820151816007019080519060200190612bfe929190613584565b505050600881905550612c1f6001826005015461346e90919063ffffffff16565b81600501819055506003600082600001548152602001908152602001600020612c54600160085461346e90919063ffffffff16565b9080600181540180825580915050906001820390600052602060002001600090919290919091505550600561010060405190810160405280612ca2600160085461346e90919063ffffffff16565b815260200183600001548152602001678ac7230489e800008152602001600f81526020016001151581526020016040805190810160405280601e81526020017f5472657a6f72204f6e6520426c61636b202b2043727970746f737465656c000081525081526020016101006040519081016040528060c781526020016137e960c791398152602001608060405190810160405280605581526020017f68747470733a2f2f73332d61702d736f757468656173742d312e616d617a6f6e81526020017f6177732e636f6d2f62696e617469722e6465762f77616c6c65742d7472657a6f81526020017f722d6f6e652d63727970746f737465656c2e6a70670000000000000000000000815250815250908060018154018082558091505090600182039060005260206000209060080201600090919290919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a0820151816005019080519060200190612e3f929190613584565b5060c0820151816006019080519060200190612e5c929190613584565b5060e0820151816007019080519060200190612e79929190613584565b505050600881905550612e9a6001826005015461346e90919063ffffffff16565b8160050181905550505050565b60085481565b600481815481101515612ebc57fe5b90600052602060002090600602016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff1690806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612fa75780601f10612f7c57610100808354040283529160200191612fa7565b820191906000526020600020905b815481529060010190602001808311612f8a57829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130455780601f1061301a57610100808354040283529160200191613045565b820191906000526020600020905b81548152906001019060200180831161302857829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130e35780601f106130b8576101008083540402835291602001916130e3565b820191906000526020600020905b8154815290600101906020018083116130c657829003601f168201915b5050505050908060050154905087565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561314e57600080fd5b6131578161348a565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156131b757600080fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561320557600080fd5b61321b600160075461346e90919063ffffffff16565b9050600460e0604051908101604052808381526020018473ffffffffffffffffffffffffffffffffffffffff1681526020016001151581526020016020604051908101604052806000815250815260200160206040519081016040528060008152508152602001602060405190810160405280600081525081526020016000815250908060018154018082558091505090600182039060005260206000209060060201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055506060820151816002019080519060200190613355929190613584565b506080820151816003019080519060200190613372929190613584565b5060a082015181600401908051906020019061338f929190613584565b5060c08201518160050155505060078190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fe6dacdb80468cc5a1f6a468c1c7dffaf8adf2888b4c8d588b09937dd22b54b658183604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b600082821115151561346357fe5b818303905092915050565b6000818301905082811015151561348157fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156134c657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106135c557805160ff19168380011785556135f3565b828001600101855582156135f3579182015b828111156135f25782518255916020019190600101906135d7565b5b5090506136009190613604565b5090565b61362691905b8082111561362257600081600090555060010161360a565b5090565b905600546865205472657a6f72204d6f64656c205420697320746865206e6578742d67656e65726174696f6e2063727970746f63757272656e63792068617264776172652077616c6c65742c2064657369676e656420746f20626520796f757220756e6976657273616c207661756c7420666f7220616c6c206f6620796f7572206469676974616c206173736574732e2053746f726520616e6420656e637279707420796f757220636f696e732c2070617373776f72647320616e64206f74686572206469676974616c206b657973207769746820636f6e666964656e63652e4c656467657220426c75652069732061207072656d69756d2068617264776172652077616c6c6574207769746820616e20616476616e636564207573657220657870657269656e6365207468616e6b7320746f2061206c6172676520746f75636873637265656e20696e746572666163652e204974206973206275696c742061726f756e6420612053656375726520456c656d656e7420616e6420696e636c7564657320616c6c2074686520736563757269747920666561747572657320796f75e2809964206578706563742066726f6d2061204c6564676572206465766963652e4b65657020796f757220636f696e7320646f75626c652070726f7465637465642120416e20756c74696d6174652062756e646c6520666f722063727970746f2d626567696e6e65727320616e6420686f646c65727320616c696b652e2047657420746865205452455a4f52204f6e6520696e20626c61636b2c20696e206120636f6e76656e69656e74207061636b616765207769746820612064616d6167652d726573697374616e74207661756c7420666f7220796f7572207265636f7665727920736565642e50726f7465637420796f75722063727970746f20617373657473207769746820746865206d6f737420706f70756c6172206d756c746963757272656e63792068617264776172652077616c6c657420696e20746865206d61726b65742e20546865204c6564676572204e616e6f2053206973206275696c742061726f756e6420612073656375726520636869702c20656e737572696e67206f7074696d616c2073656375726974792ea165627a7a723058205d50c5cd0db131e172cbaaf369352a1eb16d4420d01b73a7ce582938c6cea2c50029",
  "deployedBytecode": "",
  "sourceMap": "118:1265:1:-;;;268:5:6;247:26;;;;;;;;;;;;;;;;;;;;1268:1:2;1240:29;;1303:1;1273:31;;1342:1;1308:35;;575:10:8;567:5;;:18;;;;;;;;;;;;;;;;;;118:1265:1;;;;;;",
  "deployedSourceMap": "118:1265:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1088:57:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1088:57:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1150:230:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1150:230:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:51:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;974:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:251;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1590:251:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1929:913;;;;;;;;;;;;;;;;;;;;;;;;;;838:92:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:92:6;;;;;;3493:1269:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3493:1269:3;;;;;;247:26:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2909:266:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2909:266:2;;;;;;800:210:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;800:210:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:8;;;;;;1174:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1174:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1174:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1174:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1174:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;666:90:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:90:6;;;;;;238:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:33:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1203:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1240:29:2;;;;;;;;;;;;;;;;;;;;;;;1029:55;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1029:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1308:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1308:35:2;;;;;;;;;;;;;;;;;;;;;;;252:3183:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;252:3183:3;;;;;;1273:31:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:31:2;;;;;;;;;;;;;;;;;;;;;;;1149:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1149:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1149:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1149:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;298:368:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;298:368:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1088:57:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1150:230:1:-;1290:23;719:5:8;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1252:1:1;1239:10;:14;:44;;;;;1271:12;;1257:10;:26;;1239:44;1231:53;;;;;;;;1316:8;1325:17;1340:1;1325:10;:14;;:17;;;;:::i;:::-;1316:27;;;;;;;;;;;;;;;;;;;;1290:53;;1367:8;1349:7;:15;;;:26;;;;;;;;;;;;;;;;;;1150:230;;;:::o;974:51:2:-;;;;;;;;;;;;;;;;;:::o;1590:251::-;1634:20;1656:17;1681:15;1699:19;:31;1719:10;1699:31;;;;;;;;;;;;;;;;1681:49;;1758:5;;;;;;;;;;;1744:19;;:10;:19;;;1775:1;1765:7;:11;:36;;;;;1791:10;;1780:7;:21;;1765:36;:70;;;;;1805:6;1812:14;1824:1;1812:7;:11;;:14;;;;:::i;:::-;1805:22;;;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;1765:70;1736:100;;;;1590:251;;;:::o;1929:913::-;2129:23;2311:19;2465:21;416:6:6;;;;;;;;;;;415:7;407:16;;;;;;;;2030:1:2;2017:10;:14;:44;;;;;2049:12;;2035:10;:26;;2017:44;2009:53;;;;;;;;2077:16;;;;;;;;;;;2076:17;2068:26;;;;;;;;2119:4;2100:16;;:23;;;;;;;;;;;;;;;;;;2155:8;2164:17;2179:1;2164:10;:14;;:17;;;;:::i;:::-;2155:27;;;;;;;;;;;;;;;;;;;;2129:53;;2196:7;:15;;;;;;;;;;;;:45;;;;;2228:7;:13;;;2215:9;:26;;2196:45;:66;;;;;2261:1;2245:7;:13;;;:17;2196:66;2188:75;;;;;;;;2285:20;2303:1;2285:7;:13;;;:17;;:20;;;;:::i;:::-;2269:7;:13;;:36;;;;2333:6;2340:22;2360:1;2340:7;:15;;;:19;;:22;;;;:::i;:::-;2333:30;;;;;;;;;;;;;;;;;;;;2311:52;;2406:53;2445:7;:13;;;2406:16;:34;2423:5;:16;;;;;;;;;;;;2406:34;;;;;;;;;;;;;;;;:38;;:53;;;;:::i;:::-;2369:16;:34;2386:5;:16;;;;;;;;;;;;2369:34;;;;;;;;;;;;;;;:90;;;;2489:23;2510:1;2489:16;;:20;;:23;;;;:::i;:::-;2465:47;;2537:12;2555:75;;;;;;;;;2567:13;2555:75;;;;2582:5;:8;;;2555:75;;;;2592:7;:10;;;2555:75;;;;2604:7;:13;;;2555:75;;;;2619:10;2555:75;;;;;2537:94;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2537:94:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:16;:113;;;;2642:38;2657:10;2669:7;:10;;;2642:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:7;:13;;;2717:9;:25;2713:95;;;2752:10;:19;;:49;2772:28;2786:7;:13;;;2772:9;:13;;:28;;;;:::i;:::-;2752:49;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2752:49:2;2713:95;2832:5;2813:16;;:24;;;;;;;;;;;;;;;;;;1929:913;;;;:::o;838:92:6:-;719:5:8;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;568:6:6;;;;;;;;;;;560:15;;;;;;;;900:5;891:6;;:14;;;;;;;;;;;;;;;;;;916:9;;;;;;;;;;838:92::o;3493:1269:3:-;3546:18;3583:15;3918:19;719:5:8;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;3575:1:3;3546:31;;3601:17;3616:1;3601:10;;:14;;:17;;;;:::i;:::-;3583:35;;3637:6;3656:207;;;;;;;;;3671:7;3656:207;;;;3688:10;3656:207;;;;;;3708:4;3656:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3861:1;3656:207;;;3637:227;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3637:227:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3624:10;:240;;;;3904:7;3870:19;:31;3890:10;3870:31;;;;;;;;;;;;;;;:41;;;;3940:6;3947:14;3959:1;3947:7;:11;;:14;;;;:::i;:::-;3940:22;;;;;;;;;;;;;;;;;;;;3918:44;;3969:19;:29;3989:5;:8;;;3969:29;;;;;;;;;;;4004:19;4021:1;4004:12;;:16;;:19;;;;:::i;:::-;3969:55;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3969:55:3;;;;;;;;;;;;;;;;;;;;;;4045:8;4066:241;;;;;;;;;4083:19;4100:1;4083:12;;:16;;:19;;;;:::i;:::-;4066:241;;;;4112:5;:8;;;4066:241;;;;4130:8;4066:241;;;;4148:1;4066:241;;;;4159:4;4066:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4045:263;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4045:263:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;4030:12;:278;;;;4335:25;4358:1;4335:5;:18;;;:22;;:25;;;;:::i;:::-;4314:5;:18;;:46;;;;4367:19;:29;4387:5;:8;;;4367:29;;;;;;;;;;;4402:19;4419:1;4402:12;;:16;;:19;;;;:::i;:::-;4367:55;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4367:55:3;;;;;;;;;;;;;;;;;;;;;;4443:8;4464:240;;;;;;;;;4481:19;4498:1;4481:12;;:16;;:19;;;;:::i;:::-;4464:240;;;;4510:5;:8;;;4464:240;;;;4528:7;4464:240;;;;4545:1;4464:240;;;;4556:4;4464:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4443:262;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4443:262:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;4428:12;:277;;;;4732:25;4755:1;4732:5;:18;;;:22;;:25;;;;:::i;:::-;4711:5;:18;;:46;;;;3493:1269;;;:::o;247:26:6:-;;;;;;;;;;;;;:::o;2909:266:2:-;3024:14;416:6:6;;;;;;;;;;;415:7;407:16;;;;;;;;2972::2;;;;;;;;;;;2971:17;2963:26;;;;;;;;3014:4;2995:16;;:23;;;;;;;;;;;;;;;;;;3041:16;:28;3058:10;3041:28;;;;;;;;;;;;;;;;3024:45;;3106:1;3075:16;:28;3092:10;3075:28;;;;;;;;;;;;;;;:32;;;;3113:10;:19;;:27;3133:6;3113:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3113:27:2;3165:5;3146:16;;:24;;;;;;;;;;;;;;;;;;2909:266;:::o;800:210:1:-;930:19;719:5:8;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;896:1:1;885:8;:12;:38;;;;;913:10;;901:8;:22;;885:38;877:47;;;;;;;;952:6;959:15;972:1;959:8;:12;;:15;;;;:::i;:::-;952:23;;;;;;;;;;;;;;;;;;;;930:45;;997:8;981:5;:13;;;:24;;;;;;;;;;;;;;;;;;800:210;;;:::o;1001:111:8:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;1174:25:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;666:90:6:-;719:5:8;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;416:6:6;;;;;;;;;;;415:7;407:16;;;;;;;;729:4;720:6;;:13;;;;;;;;;;;;;;;;;;744:7;;;;;;;;;;666:90::o;238:20:8:-;;;;;;;;;;;;;:::o;1203:33:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1240:29::-;;;;:::o;1029:55::-;;;;;;;;;;;;;;;;;:::o;1308:35::-;;;;:::o;252:3183:3:-;305:18;342:15;675:19;719:5:8;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;326:10:3;305:31;;360:17;375:1;360:10;;:14;;:17;;;;:::i;:::-;342:35;;396:6;415:205;;;;;;;;;430:7;415:205;;;;447:10;415:205;;;;;;467:4;415:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:1;415:205;;;396:225;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;396:225:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;383:10;:238;;;;661:7;627:19;:31;647:10;627:31;;;;;;;;;;;;;;;:41;;;;697:6;704:14;716:1;704:7;:11;;:14;;;;:::i;:::-;697:22;;;;;;;;;;;;;;;;;;;;675:44;;726:19;:29;746:5;:8;;;726:29;;;;;;;;;;;761:19;778:1;761:12;;:16;;:19;;;;:::i;:::-;726:55;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;726:55:3;;;;;;;;;;;;;;;;;;;;;;802:8;823:373;;;;;;;;;831:19;848:1;831:12;;:16;;:19;;;;:::i;:::-;823:373;;;;858:5;:8;;;823:373;;;;874:7;823:373;;;;889:3;823:373;;;;900:4;823:373;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:395;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;802:395:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;787:12;:410;;;;1224:25;1247:1;1224:5;:18;;;:22;;:25;;;;:::i;:::-;1203:5;:18;;:46;;;;1256:19;:29;1276:5;:8;;;1256:29;;;;;;;;;;;1291:19;1308:1;1291:12;;:16;;:19;;;;:::i;:::-;1256:55;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1256:55:3;;;;;;;;;;;;;;;;;;;;;;1332:8;1353:426;;;;;;;;;1361:19;1378:1;1361:12;;:16;;:19;;;;:::i;:::-;1353:426;;;;1388:5;:8;;;1353:426;;;;1404:7;1353:426;;;;1419:1;1353:426;;;;1428:4;1353:426;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1332:448;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1332:448:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1317:12;:463;;;;1807:25;1830:1;1807:5;:18;;;:22;;:25;;;;:::i;:::-;1786:5;:18;;:46;;;;1839:19;:29;1859:5;:8;;;1839:29;;;;;;;;;;;1874:19;1891:1;1874:12;;:16;;:19;;;;:::i;:::-;1839:55;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1839:55:3;;;;;;;;;;;;;;;;;;;;;;1915:8;1936:268;;;;;;;;;1944:19;1961:1;1944:12;;:16;;:19;;;;:::i;:::-;1936:268;;;;1971:5;:8;;;1936:268;;;;1987:7;1936:268;;;;2002:2;1936:268;;;;2012:4;1936:268;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1915:290;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1915:290:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1900:12;:305;;;;2232:25;2255:1;2232:5;:18;;;:22;;:25;;;;:::i;:::-;2211:5;:18;;:46;;;;2264:19;:29;2284:5;:8;;;2264:29;;;;;;;;;;;2299:19;2316:1;2299:12;;:16;;:19;;;;:::i;:::-;2264:55;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2264:55:3;;;;;;;;;;;;;;;;;;;;;;2340:8;2361:428;;;;;;;;;2369:19;2386:1;2369:12;;:16;;:19;;;;:::i;:::-;2361:428;;;;2396:5;:8;;;2361:428;;;;2412:7;2361:428;;;;2427:2;2361:428;;;;2437:4;2361:428;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2340:450;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2340:450:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2325:12;:465;;;;2817:25;2840:1;2817:5;:18;;;:22;;:25;;;;:::i;:::-;2796:5;:18;;:46;;;;2849:19;:29;2869:5;:8;;;2849:29;;;;;;;;;;;2884:19;2901:1;2884:12;;:16;;:19;;;;:::i;:::-;2849:55;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2849:55:3;;;;;;;;;;;;;;;;;;;;;;2925:8;2946:431;;;;;;;;;2954:19;2971:1;2954:12;;:16;;:19;;;;:::i;:::-;2946:431;;;;2981:5;:8;;;2946:431;;;;2997:8;2946:431;;;;3013:2;2946:431;;;;3023:4;2946:431;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2925:453;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2925:453:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2910:12;:468;;;;3405:25;3428:1;3405:5;:18;;;:22;;:25;;;;:::i;:::-;3384:5;:18;;:46;;;;252:3183;;;:::o;1273:31:2:-;;;;:::o;1149:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1274:103:8:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;298:368:1:-;457:15;719:5:8;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;407:1:1;371:19;:32;391:11;371:32;;;;;;;;;;;;;;;;:37;363:46;;;;;;;;475:17;490:1;475:10;;:14;;:17;;;;:::i;:::-;457:35;;511:6;523:48;;;;;;;;;529:7;523:48;;;;538:11;523:48;;;;;;551:4;523:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;569:1;523:48;;;511:61;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;511:61:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;498:10;:74;;;;613:7;578:19;:32;598:11;578:32;;;;;;;;;;;;;;;:42;;;;631:30;640:7;649:11;631:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;298:368;;:::o;1060:116:7:-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;1238:128::-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;1512:171:8:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;118:1265:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\n\nimport \"./EthStoreSample.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract EthStoreAdministrator is EthStoreSample {\n\n  using SafeMath for uint256;\n\n  /** @dev Create a new store.\n    * @param _storeOwner The address of the store owner.\n    */\n  function createStore(address _storeOwner) public onlyOwner {\n    require(storeOwnerToStoreId[_storeOwner] == 0);\n    // create a store for the store owner\n    uint256 storeId = storeCount.add(1);\n    storeCount = stores.push(Store(storeId, _storeOwner, true, \"\", \"\", \"\", 0));\n    storeOwnerToStoreId[_storeOwner] = storeId;\n    emit NewStore(storeId, _storeOwner);\n  }\n\n  /** @dev Enable / disable a store.\n    * @param _storeId The id of the store.\n    * @param _enabled The flag of enabled.\n    */\n  function enableStore(uint256 _storeId, bool _enabled) public onlyOwner {\n    require(_storeId > 0 && _storeId <= storeCount);\n    Store storage store = stores[_storeId.sub(1)];\n    store.enabled = _enabled;\n  }\n\n  /** @dev Enable / disable a product.\n    * @param _productId The id of the product.\n    * @param _enabled The flag of enabled.\n    */\n  function enableProduct(uint256 _productId, bool _enabled) public onlyOwner {\n    require(_productId > 0 && _productId <= productCount);\n    Product storage product = products[_productId.sub(1)];\n    product.enabled = _enabled;\n  }\n\n}",
  "sourcePath": "/Users/bichenkk/Desktop/ethstore/contracts/EthStoreAdministrator.sol",
  "ast": {
    "absolutePath": "/Users/bichenkk/Desktop/ethstore/contracts/EthStoreAdministrator.sol",
    "exportedSymbols": {
      "EthStoreAdministrator": [
        139
      ]
    },
    "id": 140,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/bichenkk/Desktop/ethstore/contracts/EthStoreSample.sol",
        "file": "./EthStoreSample.sol",
        "id": 13,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 859,
        "src": "26:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 14,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 1319,
        "src": "57:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15,
              "name": "EthStoreSample",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 858,
              "src": "152:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EthStoreSample_$858",
                "typeString": "contract EthStoreSample"
              }
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "152:14:1"
          }
        ],
        "contractDependencies": [
          464,
          858,
          1224,
          1404
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 139,
        "linearizedBaseContracts": [
          139,
          858,
          464,
          1224,
          1404
        ],
        "name": "EthStoreAdministrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19,
            "libraryName": {
              "contractScope": null,
              "id": 17,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1318,
              "src": "178:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1318",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "172:27:1",
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "191:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "357:309:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 27,
                            "name": "storeOwnerToStoreId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 220,
                            "src": "371:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 29,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "_storeOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "391:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "371:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "407:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "371:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1422,
                        1423
                      ],
                      "referencedDeclaration": 1422,
                      "src": "363:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "363:46:1"
                },
                {
                  "assignments": [
                    35
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35,
                      "name": "storeId",
                      "nodeType": "VariableDeclaration",
                      "scope": 68,
                      "src": "457:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "457:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 40,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "490:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "storeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "475:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1317,
                      "src": "475:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "475:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "457:35:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "storeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "498:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 45,
                              "name": "storeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "529:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 46,
                              "name": "_storeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "538:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "551:4:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 48,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "557:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "561:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "565:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 51,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "569:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 44,
                            "name": "Store",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "523:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Store_$184_storage_ptr_$",
                              "typeString": "type(struct EthStoreBase.Store storage pointer)"
                            }
                          },
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "523:48:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Store_$184_memory",
                            "typeString": "struct EthStoreBase.Store memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Store_$184_memory",
                            "typeString": "struct EthStoreBase.Store memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 42,
                          "name": "stores",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "511:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Store_$184_storage_$dyn_storage",
                            "typeString": "struct EthStoreBase.Store storage ref[] storage ref"
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "511:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Store_$184_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct EthStoreBase.Store storage ref) returns (uint256)"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "511:61:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "498:74:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "498:74:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "storeOwnerToStoreId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "578:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 58,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "_storeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "598:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "578:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "storeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "613:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "578:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "578:42:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "storeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "640:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "_storeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "649:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62,
                      "name": "NewStore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "631:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "631:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "EmitStatement",
                  "src": "626:35:1"
                }
              ]
            },
            "documentation": "@dev Create a new store.\n@param _storeOwner The address of the store owner.",
            "id": 68,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 24,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 23,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1352,
                  "src": "347:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "347:9:1"
              }
            ],
            "name": "createStore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "name": "_storeOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "319:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "318:21:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "357:0:1"
            },
            "scope": 139,
            "src": "298:368:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "871:139:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 78,
                            "name": "_storeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "885:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "896:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "885:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "_storeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "901:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 82,
                            "name": "storeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "913:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "901:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "885:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1422,
                        1423
                      ],
                      "referencedDeclaration": 1422,
                      "src": "877:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "877:47:1"
                },
                {
                  "assignments": [
                    88
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88,
                      "name": "store",
                      "nodeType": "VariableDeclaration",
                      "scope": 103,
                      "src": "930:19:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Store_$184_storage_ptr",
                        "typeString": "struct EthStoreBase.Store"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 87,
                        "name": "Store",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 184,
                        "src": "930:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Store_$184_storage_ptr",
                          "typeString": "struct EthStoreBase.Store"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "stores",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "952:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Store_$184_storage_$dyn_storage",
                        "typeString": "struct EthStoreBase.Store storage ref[] storage ref"
                      }
                    },
                    "id": 94,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "972:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "_storeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "959:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1293,
                        "src": "959:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "959:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "952:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Store_$184_storage",
                      "typeString": "struct EthStoreBase.Store storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "930:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "store",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "981:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Store_$184_storage_ptr",
                          "typeString": "struct EthStoreBase.Store storage pointer"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "enabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 175,
                      "src": "981:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "_enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "997:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "981:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "981:24:1"
                }
              ]
            },
            "documentation": "@dev Enable / disable a store.\n@param _storeId The id of the store.\n@param _enabled The flag of enabled.",
            "id": 103,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 75,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 74,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1352,
                  "src": "861:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "861:9:1"
              }
            ],
            "name": "enableStore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "name": "_storeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "821:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "name": "_enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "839:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "820:33:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "871:0:1"
            },
            "scope": 139,
            "src": "800:210:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "1225:155:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 113,
                            "name": "_productId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "1239:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1252:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1239:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 116,
                            "name": "_productId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "1257:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 117,
                            "name": "productCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 240,
                            "src": "1271:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1257:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1239:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1422,
                        1423
                      ],
                      "referencedDeclaration": 1422,
                      "src": "1231:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1231:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1231:53:1"
                },
                {
                  "assignments": [
                    123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123,
                      "name": "product",
                      "nodeType": "VariableDeclaration",
                      "scope": 138,
                      "src": "1290:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$201_storage_ptr",
                        "typeString": "struct EthStoreBase.Product"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 122,
                        "name": "Product",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 201,
                        "src": "1290:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$201_storage_ptr",
                          "typeString": "struct EthStoreBase.Product"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "products",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "1316:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Product_$201_storage_$dyn_storage",
                        "typeString": "struct EthStoreBase.Product storage ref[] storage ref"
                      }
                    },
                    "id": 129,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1340:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 125,
                          "name": "_productId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1325:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1293,
                        "src": "1325:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1325:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1316:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$201_storage",
                      "typeString": "struct EthStoreBase.Product storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1290:53:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "product",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1349:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$201_storage_ptr",
                          "typeString": "struct EthStoreBase.Product storage pointer"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "enabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 194,
                      "src": "1349:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 134,
                      "name": "_enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "1367:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1349:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1349:26:1"
                }
              ]
            },
            "documentation": "@dev Enable / disable a product.\n@param _productId The id of the product.\n@param _enabled The flag of enabled.",
            "id": 138,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 110,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 109,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1352,
                  "src": "1215:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1215:9:1"
              }
            ],
            "name": "enableProduct",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "name": "_productId",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1173:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1173:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "name": "_enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1193:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1172:35:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1225:0:1"
            },
            "scope": 139,
            "src": "1150:230:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 140,
        "src": "118:1265:1"
      }
    ],
    "src": "0:1383:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/bichenkk/Desktop/ethstore/contracts/EthStoreAdministrator.sol",
    "exportedSymbols": {
      "EthStoreAdministrator": [
        139
      ]
    },
    "id": 140,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/bichenkk/Desktop/ethstore/contracts/EthStoreSample.sol",
        "file": "./EthStoreSample.sol",
        "id": 13,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 859,
        "src": "26:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 14,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 1319,
        "src": "57:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15,
              "name": "EthStoreSample",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 858,
              "src": "152:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EthStoreSample_$858",
                "typeString": "contract EthStoreSample"
              }
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "152:14:1"
          }
        ],
        "contractDependencies": [
          464,
          858,
          1224,
          1404
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 139,
        "linearizedBaseContracts": [
          139,
          858,
          464,
          1224,
          1404
        ],
        "name": "EthStoreAdministrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19,
            "libraryName": {
              "contractScope": null,
              "id": 17,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1318,
              "src": "178:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1318",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "172:27:1",
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "191:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "357:309:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 27,
                            "name": "storeOwnerToStoreId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 220,
                            "src": "371:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 29,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "_storeOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "391:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "371:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "407:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "371:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1422,
                        1423
                      ],
                      "referencedDeclaration": 1422,
                      "src": "363:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "363:46:1"
                },
                {
                  "assignments": [
                    35
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35,
                      "name": "storeId",
                      "nodeType": "VariableDeclaration",
                      "scope": 68,
                      "src": "457:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "457:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 40,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "490:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "storeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "475:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1317,
                      "src": "475:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "475:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "457:35:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "storeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "498:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 45,
                              "name": "storeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "529:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 46,
                              "name": "_storeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "538:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "551:4:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 48,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "557:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "561:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "565:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 51,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "569:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 44,
                            "name": "Store",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "523:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Store_$184_storage_ptr_$",
                              "typeString": "type(struct EthStoreBase.Store storage pointer)"
                            }
                          },
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "523:48:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Store_$184_memory",
                            "typeString": "struct EthStoreBase.Store memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Store_$184_memory",
                            "typeString": "struct EthStoreBase.Store memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 42,
                          "name": "stores",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "511:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Store_$184_storage_$dyn_storage",
                            "typeString": "struct EthStoreBase.Store storage ref[] storage ref"
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "511:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Store_$184_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct EthStoreBase.Store storage ref) returns (uint256)"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "511:61:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "498:74:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "498:74:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "storeOwnerToStoreId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "578:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 58,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "_storeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "598:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "578:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "storeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "613:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "578:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "578:42:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "storeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "640:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "_storeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "649:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62,
                      "name": "NewStore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "631:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "631:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "EmitStatement",
                  "src": "626:35:1"
                }
              ]
            },
            "documentation": "@dev Create a new store.\n@param _storeOwner The address of the store owner.",
            "id": 68,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 24,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 23,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1352,
                  "src": "347:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "347:9:1"
              }
            ],
            "name": "createStore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "name": "_storeOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "319:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "318:21:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "357:0:1"
            },
            "scope": 139,
            "src": "298:368:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "871:139:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 78,
                            "name": "_storeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "885:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "896:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "885:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "_storeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "901:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 82,
                            "name": "storeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "913:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "901:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "885:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1422,
                        1423
                      ],
                      "referencedDeclaration": 1422,
                      "src": "877:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "877:47:1"
                },
                {
                  "assignments": [
                    88
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88,
                      "name": "store",
                      "nodeType": "VariableDeclaration",
                      "scope": 103,
                      "src": "930:19:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Store_$184_storage_ptr",
                        "typeString": "struct EthStoreBase.Store"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 87,
                        "name": "Store",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 184,
                        "src": "930:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Store_$184_storage_ptr",
                          "typeString": "struct EthStoreBase.Store"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "stores",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "952:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Store_$184_storage_$dyn_storage",
                        "typeString": "struct EthStoreBase.Store storage ref[] storage ref"
                      }
                    },
                    "id": 94,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "972:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "_storeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "959:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1293,
                        "src": "959:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "959:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "952:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Store_$184_storage",
                      "typeString": "struct EthStoreBase.Store storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "930:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "store",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "981:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Store_$184_storage_ptr",
                          "typeString": "struct EthStoreBase.Store storage pointer"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "enabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 175,
                      "src": "981:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "_enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "997:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "981:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "981:24:1"
                }
              ]
            },
            "documentation": "@dev Enable / disable a store.\n@param _storeId The id of the store.\n@param _enabled The flag of enabled.",
            "id": 103,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 75,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 74,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1352,
                  "src": "861:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "861:9:1"
              }
            ],
            "name": "enableStore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "name": "_storeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "821:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "name": "_enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "839:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "820:33:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "871:0:1"
            },
            "scope": 139,
            "src": "800:210:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "1225:155:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 113,
                            "name": "_productId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "1239:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1252:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1239:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 116,
                            "name": "_productId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "1257:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 117,
                            "name": "productCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 240,
                            "src": "1271:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1257:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1239:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1422,
                        1423
                      ],
                      "referencedDeclaration": 1422,
                      "src": "1231:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1231:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1231:53:1"
                },
                {
                  "assignments": [
                    123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123,
                      "name": "product",
                      "nodeType": "VariableDeclaration",
                      "scope": 138,
                      "src": "1290:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$201_storage_ptr",
                        "typeString": "struct EthStoreBase.Product"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 122,
                        "name": "Product",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 201,
                        "src": "1290:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$201_storage_ptr",
                          "typeString": "struct EthStoreBase.Product"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "products",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "1316:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Product_$201_storage_$dyn_storage",
                        "typeString": "struct EthStoreBase.Product storage ref[] storage ref"
                      }
                    },
                    "id": 129,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1340:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 125,
                          "name": "_productId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1325:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1293,
                        "src": "1325:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1325:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1316:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$201_storage",
                      "typeString": "struct EthStoreBase.Product storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1290:53:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "product",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1349:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$201_storage_ptr",
                          "typeString": "struct EthStoreBase.Product storage pointer"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "enabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 194,
                      "src": "1349:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 134,
                      "name": "_enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "1367:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1349:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1349:26:1"
                }
              ]
            },
            "documentation": "@dev Enable / disable a product.\n@param _productId The id of the product.\n@param _enabled The flag of enabled.",
            "id": 138,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 110,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 109,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1352,
                  "src": "1215:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1215:9:1"
              }
            ],
            "name": "enableProduct",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "name": "_productId",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1173:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1173:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "name": "_enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1193:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1172:35:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1225:0:1"
            },
            "scope": 139,
            "src": "1150:230:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 140,
        "src": "118:1265:1"
      }
    ],
    "src": "0:1383:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x5ba48fc19a8a7945c9a93582f24a1d87d5bed988",
      "transactionHash": "0xc2962deb65a5e176ed4f3bbcd21fe33090222d9de9dc4228498454db26a0850f"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-08-29T09:03:17.326Z"
}